@{
    ViewBag.Title = "Grid show and hide columns using api";
}
<h1>Grid show and hide columns using api</h1>
<p>There's also a grid mod that will add a columns selector to the grid, you can see it here <a href="@Url.Action("Index", "GridDemo")">Grid demo</a></p>
@*begin*@
<div class="bar">
    @(Html.Awe().AjaxCheckboxList("colSel")
         .DataFunc("getColumns")
         .Mod("awem.multiselb")
         .Tag(new { InLabel = "columns", NoSelClose = true })
        .Load(false))
    
    <button type="button" id="btnLocation" class="awe-btn">Toggle Location column</button>
</div>
@(Html.Awe().Grid("HideApiGrid")
    .Url(Url.Action("GetItems", "LunchGrid"))
    .Persistence(Persistence.Session)
    .Columns(
        new Column { Bind = "Id", Width = 85, Groupable = false },
        new Column { Bind = "Person" },
        new Column { Bind = "Food" },
        new Column { Bind = "Location" },
        new Column { Bind = "Date", Width = 110 },
        new Column { Bind = "Country.Name", ClientFormat = ".(CountryName)", Header = "Country" },
        new Column { Bind = "Chef.FirstName,Chef.LastName", ClientFormat = ".(ChefName)", Header = "Chef" })
    .Height(300)
    .PageSize(10))
<br />

Using columns persistence type session, try hiding some columns and refresh the page (or go to another page and return). 
<script>
    // dropdown data
    function getColumns() {
        return awef.select($('#HideApiGrid').data('o').columns, function (col, i) {
            return { k: i, c: col.H };
        });
    }

    $(function () {
        var g = $('#HideApiGrid');
        var dropdown = $('#colSel');
        var api = g.data('api');

        $('#btnLocation').on('click',
            function () {
                // get column
                var col = awef.where(g.data('o').columns,
                    function (c) {
                        return c.P == 'Location';
                    })[0];

                if (!col.Hid) {
                    col.Hid = 1; // hide column

                    if (col.Gd) {
                        // remove grouped when hiding column
                        col.Gd = 0;
                        g.data('o').lrso = 1;
                    }
                } else {
                    col.Hid = 0;
                }

                api.persist();
                api.render();
            });


        // reload dropdown on grid load
        g.on('awerender', function () {
            dropdown.data('api').load();

            var values = [];
            awef.loop(g.data('o').columns, function (col, i) {
                if (!col.Hid) values.push(i);
            });

            dropdown.val(JSON.stringify(values)).data('api').render();
        });

        // show/hide columns on dropdown value change
        dropdown.on('change', function () {
            var colIndxs = $.parseJSON($(this).val() || "[]");

            awef.loop(g.data('o').columns, function (col, i) {
                if ($.inArray(i.toString(), colIndxs) === -1) {

                    col.Hid = 1; // hide column

                    if (col.Gd) {
                        // remove grouped when hiding column
                        col.Gd = 0;
                        g.data('o').lrso = 1;
                    }
                } else {
                    col.Hid = 0;
                }
            });

            api.persist(); // save columns state
            api.render();
        });
    });
</script>
@*end*@
<br />
<div class="code">
    @Html.Source("GridShowHideColumnsApiDemo/Index.cshtml")
</div>