@using AwesomeMvcDemo.Models
@{
    ViewBag.Title = "Odropdown - Dropdownlist control with search functionality";
}

<h1>Odropdown</h1>
<div class="expl">
    DropdownList with search functionality. Search can be local or remote if  you set <code>SearchFunc</code>. <br />
    Other features: items grouping, tree structure, lazy nodes,  fav buttons, show tree structure as submenus, custom item and caption rendering.<br />
    It will receive data from <code>Url</code> or from <code>DataFunc</code> which must return either an array of items or a promise (e.g. ajax request).
</div>
<div class="example">
    <h2 data-name="odropdown">Odropdown</h2>
    @*beginodd*@
    @(Html.Awe().AjaxRadioList("AllMealsOdropdown")
        .Odropdown()
        .Url(Url.Action("GetAllMeals", "Data")))
    @*endodd*@
    <br />
    <br />
    <div class="tabs">
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "odd")</div>
        <div data-caption="controller">@Html.Code("Awesome/DataController.cs").Action("GetAllMeals")</div>
    </div>
</div>

<div class="example">
    <h2>Cascading Odropdowns</h2>
    @*begincc*@
    @(Html.Awe().AjaxRadioList("CatOdropdown")
          .Odropdown()
          .Url(Url.Action("GetCategories", "Data")))

    @(Html.Awe().AjaxRadioList("MealsOdropdown")
          .Odropdown(o => o.AutoSelectFirst())
          .Url(Url.Action("GetMeals", "Data"))
          .Parent("CatOdropdown", "categories"))
    @*endcc*@

    <div class="tabs code">
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "cc")</div>
        <div data-caption="controller">@Html.Code("Awesome/DataController.cs").Action("GetMeals")</div>
    </div>
</div>

<div class="example">
    <h2>Odropdown with grouped items</h2>
    @*beginamg*@
    @(Html.Awe().AjaxRadioList("MealsGrouped")
        .Odropdown()
        .Url(Url.Action("GetAllMealsGrouped", "Data")))
    @*endamg*@
    <br />
    <br />
    <div class="tabs code">
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "amg")</div>
        <div data-caption="controller">@Html.Csource("Awesome/DataController.cs", "amg")</div>
    </div>
</div>

<div class="example">
    <h2>Odropdown with submenu</h2>
    @*beginsbm*@
    @(Html.Awe().AjaxRadioList("MealsSbm")
        .Odropdown(o => o.Submenu()
            .ItemFunc("site.imgItem")
            .CaptionFunc("utils.imgCaption"))
        .Url(Url.Action("GetMealsTreeImg", "Data")))
    @*endsbm*@
    <br />
    <br />
    <div class="tabs code">
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "sbm")</div>
        <div data-caption="controller">@Html.Csource("Awesome/DataController.cs", "sbm")</div>
    </div>
</div>

<div class="example">
    <h2 data-name="odropdownfav">Odropdown with fav buttons</h2>
    @*beginfav*@
    @(Html.Awe().AjaxRadioList("AllMealsFav")
        .Url(Url.Action("GetMealsImg", "Data"))
        .CssClass("bigFavs")
        .Odropdown(o => o.Favs()
            .ItemFunc("site.imgItem")
            .CaptionFunc("utils.imgCaption")))

    <br />
    <br />
    @(Html.Awe().AjaxRadioList("AllMealsFav2")
        .Url(Url.Action("GetMealsImg", "Data"))
        .CssClass("bigFavs")
        .Odropdown(o => o.Favs(3, favs:new object[]{Db.Meals[3].Id, Db.Meals[15].Id }, frozen: new object[]{ Db.Meals[5].Id })
            .ItemFunc("site.imgItem")
            .CaptionFunc("utils.imgCaption")))
    @*endfav*@
    <br />
    <br />
    <div class="code">
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "fav")</div>
    </div>
</div>

<div class="example">
    <h2>Odropdown, tree data, lazy nodes, remote search</h2>
    @*beginlztree*@
    @(Html.Awe().AjaxRadioList("RmtLazyTree")
        .Url(Url.Action("GetTreeNodesLazy", "Data"))
        .Odropdown(o => o.CollapseNodes()
            .ClearBtn()
            .PopupMinWidth(350)
            .SearchFunc("utils.osearch", Url.Action("SearchTree", "Data"))))
    @*endlztree*@
    <br />
    <br />
    <div class="tabs code">
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "lztree")</div>
        <div data-caption="controller">@Html.Csource("Awesome/DataController.cs", "tree")</div>
    </div>
</div>

<div class="example">
    <h2 data-name="oremotesearch">Odropdown with remote search</h2>
    @*beginrs*@
    @(Html.Awe().AjaxRadioList("RemoteSearchOdropdown")
          .Odropdown(o => o.SearchFunc("utils.osearch", Url.Action("SearchMeals", "Data"), "m1").ClearBtn())
          .Value(197)
          .Url(Url.Action("GetMealsInit", "Data")))

    @(Html.Awe().AjaxRadioList("RemoteSearchCombobox")
          .Combobox(o => o.SearchFunc("utils.osearch", Url.Action("SearchMeals", "Data"), "m1"))
          .Value(197)
          .Url(Url.Action("GetMealsInit", "Data"))) <span class="hint">try 'o'</span>
    @*endrs*@
    <br />
    <br />
    <div class="tabs">
        <div data-caption="description" class="expl">
            Only a few items + the selected one are loaded initially using the url specified in .Url, but when the user types something in the searchbox more items
            are loaded by executing the specified .SearchFunc; the new loaded items will be stored/cached until a load will occur, e.g. when a parent changes it's value the component will load.
            <br />
            Components with the same cache key ("m1", "g") have a shared cache.
        </div>
        <div data-caption="view">@Html.Source("Odropdown/Index.cshtml", "rs")</div>
        <div data-caption="controller">@Html.Csource("Awesome/DataController.cs", "rso")</div>
    </div>
</div>

<div class="example">
    @Html.Partial("Demos/RmtSrcGit")
</div>



<div class="example">
    <h2 data-name="odropdown">Odropdown with custom item and caption rendering</h2>
    @*beginoddci*@
    @(Html.Awe().AjaxRadioList("CustomItemOdd")
        .Value(Db.Meals[1].Id)
        .Url(Url.Action("GetMealsImg", "Data"))
        .Odropdown(o => o.ItemFunc("imgItem").CaptionFunc("imgCaption")))
    <script>
        function imgItem(o) {
            return '<div class="o-igit"><img src="' + o.url + '" />' + o.c + '</div>';
        }

        function imgCaption(o) {
            return '<img class="cthumb" src="' + o.url + '" />' + o.c;
        }
    </script>
    @*endoddci*@
    <br />
    <br />
    <div class="tabs">
        <div data-caption="description" class="expl">
            Custom js functions are defined for rendering the items and caption of the odropdown.
        </div>
        <div data-caption="view">@Html.Source("AjaxRadioListDemo/Index.cshtml", "oddci")</div>
        <div data-caption="controller">@Html.Csource("Awesome/DataController.cs", "img")</div>
    </div>
</div>