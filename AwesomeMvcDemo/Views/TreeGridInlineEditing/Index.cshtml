
@{
    ViewBag.Title = "Tree grid inline editing";
}

<h1>Tree grid crud using inline editing</h1>


<div class="example">
    @*begin*@
    @{
        var inlTree = "inlineTreeGrid";
    }
    @Html.InitDeletePopupForGrid(inlTree)
    <div class="bar">
        <button type="button" onclick="$('#@inlTree').data('api').inlineCreate()" class="awe-btn">Create</button>
    </div>
    <script>
        function addChild(model) {
            return model.Id ? '<button class="awe-btn o-pad addChild" type="button">add child</button>' : '';
        }

        $(function() {
            $('#@inlTree').on('click', '.addChild', function() {
                var row = $(this).closest('.awe-row');
                $('#@inlTree').data('api').inlineCreate({ parentId: row.data('k') }, { parent: row });
            });
        });
    </script>
    @(Html.Awe().Grid(inlTree)
        .Url(Url.Action("CrudTree"))
        .Mod(o => o.InlineEdit(Url.Action("Save")))
        .Columns(
            new Column { Bind = "Name" }
                .Mod(o => o.Inline(Html.Awe().TextBox("Name"))),

            new Column { Bind = "Id", Width = 100 }
                .Mod(o => o.InlineId().InlineHidden("parentId")),
            new Column { ClientFormatFunc = "addChild", Width = 120},
            new Column { ClientFormat = GridUtils.InlineEditFormat(), Width = 80 },
            new Column { ClientFormat = Html.InlineDeleteFormatForGrid(inlTree), Width = 85 })
        .Resizable()
        .PageSize(3)
        .Height(400))
    @*end*@
    <br/>
    <div class="tabs">
        <div data-caption="description" class="expl">
            TreeGrid with inline editing, it also has lazy loading for nodes of level 2.
        </div>
        <div data-caption="view">@Html.Source("TreeGridInlineEditing/Index.cshtml")</div>
        <div data-caption="controller">@Html.Csource("Demos/Grid/TreeGridInlineEditingController.cs")</div>
    </div>
</div>