@using AwesomeMvcDemo.Models
@using Omu.Awem.Helpers
@{
    ViewBag.Title = "Grid inline editing conditional Demo";
}
<h1>Grid inline editing conditional</h1>
@*begin*@
@{ var grid = "DinnersGrid2"; }
@Html.InitDeletePopupForGrid(grid, "GridInlineEditDemo")

<div class="bar">
    @Html.InlineCreateButtonForGrid(grid, new { DispOrganic = "" })
</div>

@{
    var isAdmin = false;
}
@(Html.Awe().Grid(grid)
      .Mod(o => o.PageInfo().InlineEdit(Url.Action("Save")))
      .Url(Url.Action("GridGetItems"))
      .Height(350)
      .Resizable()
      .Columns(
          new Column { Bind = "Id", Width = 75 }.Mod(o => o.InlineId()),
          new Column { Bind = "Name" }.Mod(o => o.Inline(Html.Awe().TextBox("Name"))),

          new Column { Bind = "Date", Width = 170 }
            .Mod(o => o.InlineFunc("dateCond")
                .Inline("<input type='hidden' name='Date' value='#Value'/>#Value")
                .Inline(Html.Awe().DatePicker("Date"))),

          new Column { Bind = "Chef.FirstName,Chef.LastName", ClientFormat = ".(ChefName)", Header = "Chef", MinWidth = 200 }
            .Mod(o => o.Inline(Html.Awe().Lookup("Chef").Controller("ChefLookup"), "ChefId")),

          new Column { ClientFormat = ".(Meals)", Header = "Meals", MinWidth = 200, Grow = 2}
          .Mod(o => o.Inline(
              Html.Awe().AjaxCheckboxList("Meals")
                  .Url(Url.Action("GetMealsImg", "Data"))
                  .Multiselect(), "MealsIds")),

          new Column { Bind = "BonusMeal.Name", ClientFormat = ".(BonusMeal)", Header = "Bonus Meal" }
            .Mod(o => o.Inline(
                Html.Awe().AjaxRadioList("BonusMealId")
                    .Url(Url.Action("GetMealsImg", "Data"))
                    .Odropdown(), "BonusMealId")),

          new Column { Bind = "Organic", Width = 100, ClientFormat = ".(DispOrganic)" }
          .Mod(o =>
          {
              if (isAdmin)
                  o.Inline(Html.Awe().CheckBox("Organic").Otoggl());
              else
                  o.InlineReadonly(); // readonly, used if you set isAdmin = false
          }),

          new Column { ClientFormatFunc = "editff", Width = 80 },
          new Column { ClientFormatFunc = "delff", Width = 85 }))
<script>
    function dateCond(o, params) {
        if (o.DateReadOnly) return params[0];
        return params[1];
    }

    function editff(o) {
        return o.Editable === false ? '': '@Html.Raw(GridUtils.InlineEditFormat())';
    }

    function delff(o) {
        var format = @Html.Raw(DemoUtils.Encode(Html.InlineDeleteFormatForGrid(grid)));
        format = format.split(".(Id)").join(o.Id);
        return o.Editable === false ? '': format;
    }
</script>
@*end*@

<br />
<div class="tabs">
    <div class="expl" data-caption="description">
        rows with 1 meal are not editable<br />
        dates with year less than 2015 are readonly<br />
        Organic is editable only if isAdmin set to true (set to false in code)
    </div>
    <div data-caption="view">@Html.Source("GridInlineEditDemo/ConditionalDemo.cshtml")</div>
    <div data-caption="controller">@Html.Csource("Demos/Grid/GridInlineEditDemoController.cs")</div>
</div>